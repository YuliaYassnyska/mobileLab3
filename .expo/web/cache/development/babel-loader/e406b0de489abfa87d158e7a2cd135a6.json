{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, { useState } from 'react'\r\n// import { Text, View, StyleSheet, TextInput } from 'react-native'\r\n// import firebase from 'firebase/app'\r\n// import Button from '@material-ui/core/Button';\r\n// // import { TextField } from '@material-ui/core';\r\n// // import axios from 'axios';\r\n// // import deviceStorage from '../../scr/services/deviceStorage';\r\n\r\n\r\n\r\n// const SignUp = ({ navigation }) => {\r\n//   const [data, setData] = useState({\r\n//     email: '',\r\n//     phone: 0,\r\n//     password: '',\r\n//     isValidEmail: true,\r\n//     isValidPassword: true,\r\n//     isValidPhone: true,\r\n//     // password_confirmation: '',\r\n//     // loading: false\r\n//   })\r\n\r\n\r\n//   // const registerUser = () => {\r\n//   //   const { email, password, password_confirmation } = data\r\n\r\n//   //   setData({ error: '', loading: true });\r\n\r\n//   //   axios.post(\"http://localhost:4000/api/v1/sign_up\",{\r\n//   //     user: {\r\n//   //       email: email,\r\n//   //       password: password,\r\n//   //       password_confirmation: password_confirmation\r\n//   //     }\r\n//   //   },)\r\n//   //   .then((response) => {\r\n//   //     deviceStorage.saveKey(\"id_token\", response.data.jwt);\r\n//   //     newJWT(response.data.jwt);\r\n//   //   })\r\n//   //   .catch((error) => {\r\n//   //      // Handle returned errors here\r\n//   //   });\r\n//   // }\r\n\r\n//   const onPressed = () => {\r\n//     firebase\r\n//       .auth()\r\n//       .createUserWithEmailAndPassword(data.email, data.password)\r\n//       .then(() => { navigation.navigate(\"Sensors\") })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       })\r\n//   }\r\n\r\n//   const validate = (text) => {\r\n//     let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n//     if (reg.test(text) === true) {\r\n//       setData({ ...data, email: text, isValidEmail: true })\r\n//     } else {\r\n//       setData({ ...data, email: text, isValidEmail: false })\r\n//     }\r\n//   }\r\n\r\n//   const checkNum = (num) => {\r\n//     if (num.length === 10) {\r\n//       setData({ ...data, phone: num, isValidPhone: true })\r\n//     } else {\r\n//       setData({ ...data, phone: num, isValidPhone: false })\r\n//     }\r\n//   }\r\n\r\n//   const handlePasswordChange = (val) => {\r\n//     if (val.length >= 8) {\r\n//       setData({\r\n//         ...data,\r\n//         password: val,\r\n//         isValidPassword: true,\r\n//       })\r\n//     } else {\r\n//       setData({\r\n//         ...data,\r\n//         password: val,\r\n//         isValidPassword: false,\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   return (<View style={styles.wrapper}>\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.titleWrapper}>Sign up</Text>\r\n//       <View style={styles.rowContainer}>\r\n//         <View style={styles.contain}>\r\n//           <TextInput\r\n//             type=\"text\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             placeholder=\"Email\"\r\n//             onChangeText={(text) => validate(text)}\r\n//           />\r\n//           {data.isValidEmail ? null : (\r\n//             <Text style={styles.errorText}>field is required</Text>\r\n//           )}\r\n//         </View>\r\n//       </View>\r\n//       <View style={styles.rowContainer}>\r\n//         <TextInput\r\n//           type=\"text\"\r\n//           id=\"name\"\r\n//           placeholder=\"Name\"\r\n//         />\r\n//       </View>\r\n//       <View style={styles.rowContainer}>\r\n//         <View style={styles.contain}>\r\n//           <TextInput\r\n//             type=\"text\"\r\n//             id=\"phone\"\r\n//             placeholder=\"Phone\"\r\n//             onChangeText={(num) => {\r\n//               checkNum(num)\r\n//             }}\r\n//           />{data.isValidPhone ? null : (\r\n//             <Text style={styles.errorText}>field is required</Text>\r\n//           )}\r\n//         </View>\r\n//       </View>\r\n//       <View style={styles.rowContainer}>\r\n//         <View style={styles.contain}>\r\n//           <TextInput\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             placeholder=\"Password\"\r\n//             onChangeText={(val) => handlePasswordChange(val)}\r\n//           />\r\n//           {data.isValidPassword ? null : (\r\n//             <Text style={styles.errorText}>field is required</Text>)}\r\n//         </View>\r\n//       </View>\r\n//       <View style={styles.buttonWrapper}>\r\n//         <Button\r\n//           onClick={onPressed}\r\n//         >Sign Up</Button>\r\n//       </View>\r\n//       <View style={styles.lastRow}>\r\n//         <Text style={styles.qa}>Not with us yet?</Text>\r\n//         <Text\r\n//           style={styles.link}\r\n//           onPress={() => {\r\n//             navigation.navigate(\"SignIn\")\r\n//           }}\r\n//         >Sign In</Text>\r\n//       </View>\r\n//     </View>\r\n//   </View>\r\n//   )\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   wrapper: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     justifyContent: 'center',\r\n//     backgroundColor: '#ecf0f1',\r\n//     alignItems: 'center',\r\n//   },\r\n//   container: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     padding: 16,\r\n//     width: 380,\r\n//     height: 550,\r\n//     justifyContent: 'center',\r\n//     alignContent: 'center',\r\n//   },\r\n//   titleWrapper: {\r\n//     display: 'flex',\r\n//     fontWeight: 'bold',\r\n//     fontSize: 32,\r\n//     justifyContent: 'center',\r\n//   },\r\n//   rowContainer: {\r\n//     display: 'flex',\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'center',\r\n//     marginTop: 16,\r\n//     borderWidth: 1,\r\n//     borderStyle: 'solid',\r\n//     borderColor: '#ffffff',\r\n//     padding: 16,\r\n//   },\r\n//   buttonWrapper: {\r\n//     display: 'flex',\r\n//     borderWidth: 1,\r\n//     borderStyle: 'solid',\r\n//     borderColor: '#1A1E3D',\r\n//     marginTop: 16,\r\n//   },\r\n//   lastRow: {\r\n//     display: 'flex',\r\n//     flexDirection: 'row',\r\n//     justifyContent: 'space-between',\r\n//     padding: 8,\r\n//     marginLeft: 16,\r\n//     marginRight: 48,\r\n//   },\r\n//   qa: {\r\n//     fontSize: 14.4,\r\n//     color: '#1A1E3D',\r\n//   },\r\n//   link: {\r\n//     fontWeight: 'bold',\r\n//     color: '#6BB5C9',\r\n//   },\r\n//   errorText: {\r\n//     fontSize: 11.2,\r\n//     color: '#C7424F',\r\n//     fontWeight: 'bold',\r\n//     width: 128,\r\n//   },\r\n//   contain: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//   },\r\n// })\r\n\r\n// export default SignUp\r\n"]},"metadata":{},"sourceType":"script"}