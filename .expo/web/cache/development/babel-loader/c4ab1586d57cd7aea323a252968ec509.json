{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\test\\\\Desktop\\\\rlab1\\\\mobile_lab1\\\\pages\\\\CurrencyFormatting\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport * as theme from \"../../components/theme\";\nimport { Block, Text } from \"../../components\";\nimport Button from '@material-ui/core/Button';\nimport { user } from \"../../components/mocks\";\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nvar defaultMaskOptions = {\n  prefix: '$',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ',',\n  allowDecimal: true,\n  decimalSymbol: '.',\n  decimalLimit: 2,\n  integerLimit: 9,\n  allowNegative: false,\n  allowLeadingZeroes: false\n};\n\nvar CurrencyInput = function CurrencyInput(_ref) {\n  var maskOptions = _ref.maskOptions,\n      inputProps = _objectWithoutProperties(_ref, [\"maskOptions\"]);\n\n  var currencyMask = createNumberMask(_objectSpread(_objectSpread({}, defaultMaskOptions), maskOptions));\n  return React.createElement(MaskedInput, _extends({\n    mask: currencyMask\n  }, inputProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }));\n};\n\nCurrencyInput.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {}\n};\nCurrencyInput.propTypes = {\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.boolean,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.boolean,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.boolean,\n    allowNegative: PropTypes.boolean,\n    allowLeadingZeroes: PropTypes.boolean,\n    integerLimit: PropTypes.number\n  })\n};\n\nvar CurrencyFormatting = function CurrencyFormatting(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.safe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Block, {\n    flex: 0.42,\n    column: true,\n    style: {\n      paddingHorizontal: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Block, {\n    flex: false,\n    row: true,\n    style: {\n      paddingVertical: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(Block, {\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    h3: true,\n    white: true,\n    style: {\n      marginRight: -(25 + 5)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Currency Formatting\")), React.createElement(Image, {\n    style: styles.avatar,\n    source: user.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), React.createElement(Block, {\n    row: true,\n    card: true,\n    shadow: true,\n    color: \"white\",\n    style: styles.headerChart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, React.createElement(Block, {\n    style: {\n      paddingHorizontal: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, React.createElement(Block, {\n    flex: false,\n    row: true,\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    h2: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Auto Formatting Currency\"))), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return navigation.navigate('Sensors');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Go to main page\"))), React.createElement(Block, {\n    flex: 0.8,\n    column: true,\n    color: \"gray2\",\n    style: styles.requests,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, React.createElement(Block, {\n    card: true,\n    shadow: true,\n    color: \"white\",\n    style: styles.request,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, React.createElement(CurrencyInput, {\n    placeholder: \"$0.00\",\n    type: \"text\",\n    style: {\n      width: 150,\n      height: 48\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  safe: {\n    flex: 1,\n    backgroundColor: theme.colors.primary\n  },\n  request: {\n    padding: 20,\n    marginBottom: 15\n  },\n  requests: {\n    marginTop: -55,\n    paddingTop: 55 + 20,\n    paddingHorizontal: 15,\n    zIndex: -1\n  },\n  headerChart: {\n    paddingTop: 30,\n    paddingBottom: 30,\n    zIndex: 1\n  },\n  forCurrency: {\n    paddingTop: 30,\n    paddingBottom: 30,\n    fontWeight: 'bold',\n    fontSize: 32\n  },\n  progress: {\n    alignItems: 'center',\n    width: 50,\n    justifyContent: 'center'\n  },\n  avatar: {\n    width: 25,\n    height: 25,\n    borderRadius: 25 / 2,\n    marginRight: 5\n  }\n});\nexport default CurrencyFormatting;","map":{"version":3,"sources":["C:/Users/test/Desktop/rlab1/mobile_lab1/pages/CurrencyFormatting/index.js"],"names":["React","useState","LinearProgress","theme","Block","Text","Button","user","PropTypes","MaskedInput","createNumberMask","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","maskOptions","inputProps","currencyMask","defaultProps","inputMode","propTypes","inputmode","string","shape","boolean","requireDecimal","number","CurrencyFormatting","navigation","styles","safe","paddingHorizontal","paddingVertical","marginRight","avatar","headerChart","navigate","requests","request","width","height","StyleSheet","create","flex","backgroundColor","colors","primary","padding","marginBottom","marginTop","paddingTop","zIndex","paddingBottom","forCurrency","fontWeight","fontSize","progress","alignItems","justifyContent","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Image, SafeAreaView, TouchableOpacity, ScrollView, TextInput } from 'react-native';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport * as theme from \"../../components/theme\";\r\nimport { Block, Text } from \"../../components\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { user } from '../../components/mocks';\r\nimport PropTypes from 'prop-types'\r\nimport MaskedInput from 'react-text-mask'\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\r\n\r\n\r\nconst defaultMaskOptions = {\r\n    prefix: '$',\r\n    suffix: '',\r\n    includeThousandsSeparator: true,\r\n    thousandsSeparatorSymbol: ',',\r\n    allowDecimal: true,\r\n    decimalSymbol: '.',\r\n    decimalLimit: 2, // how many digits allowed after the decimal\r\n    integerLimit: 9, // limit length of integer numbers\r\n    allowNegative: false,\r\n    allowLeadingZeroes: false,\r\n}\r\n\r\nconst CurrencyInput = ({ maskOptions, ...inputProps }) => {\r\n    const currencyMask = createNumberMask({\r\n        ...defaultMaskOptions,\r\n        ...maskOptions,\r\n    })\r\n    return <MaskedInput mask={currencyMask} {...inputProps} />\r\n}\r\n\r\nCurrencyInput.defaultProps = {\r\n    inputMode: 'numeric',\r\n    maskOptions: {},\r\n}\r\n\r\nCurrencyInput.propTypes = {\r\n    inputmode: PropTypes.string,\r\n    maskOptions: PropTypes.shape({\r\n        prefix: PropTypes.string,\r\n        suffix: PropTypes.string,\r\n        includeThousandsSeparator: PropTypes.boolean,\r\n        thousandsSeparatorSymbol: PropTypes.string,\r\n        allowDecimal: PropTypes.boolean,\r\n        decimalSymbol: PropTypes.string,\r\n        decimalLimit: PropTypes.string,\r\n        requireDecimal: PropTypes.boolean,\r\n        allowNegative: PropTypes.boolean,\r\n        allowLeadingZeroes: PropTypes.boolean,\r\n        integerLimit: PropTypes.number,\r\n    }),\r\n}\r\n\r\nconst CurrencyFormatting = ({ navigation }) => {\r\n    // const [formated, setFormated] = useState('');\r\n\r\n    // const validate = (currency) => {\r\n    //     const formatter = new Intl.NumberFormat('en-US', {\r\n    //         style: 'currency',\r\n    //         currency: 'USD',\r\n    //         minimumFractionDigits: 2\r\n    //     })\r\n    //     setFormated(formatter.format(currency));\r\n    // }\r\n\r\n    return <View>\r\n        <SafeAreaView style={styles.safe}>\r\n            <Block flex={0.42} column style={{ paddingHorizontal: 15 }}>\r\n                <Block flex={false} row style={{ paddingVertical: 15 }}>\r\n                    <Block center>\r\n                        <Text h3 white style={{ marginRight: -(25 + 5) }}>Currency Formatting</Text>\r\n                    </Block>\r\n                    <Image style={styles.avatar} source={user.avatar} />\r\n                </Block>\r\n                <Block row card shadow color=\"white\" style={styles.headerChart}>\r\n                    <Block style={{ paddingHorizontal: 30 }}>\r\n                        <Block flex={false} row center>\r\n                            <Text h2>Auto Formatting Currency</Text>\r\n                        </Block>\r\n                    </Block>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => navigation.navigate('Sensors')}>\r\n                        Go to main page\r\n                    </Button>\r\n                </Block>\r\n            </Block>\r\n            <Block flex={0.8} column color=\"gray2\" style={styles.requests}>\r\n                <ScrollView showsVerticalScrollIndicator={false}>\r\n                    <Block card shadow color=\"white\" style={styles.request}>\r\n                        {/* <TextInput\r\n                            type=\"text\"\r\n                            name=\"currency-field\"\r\n                            id=\"currency-field\"\r\n                            data-type=\"currency\"\r\n                            placeholder=\"$1,000,000.00\"\r\n                            value={formated}\r\n                            editable={true}\r\n                            onChangeText={(currency) => validate(currency)}\r\n\r\n                        /> */}\r\n\r\n                        <CurrencyInput placeholder=\"$0.00\" type=\"text\" style={{ width: 150, height: 48 }} />\r\n                        {/* <Text style={styles.forCurrency}>{formated}</Text> */}\r\n                    </Block>\r\n                </ScrollView>\r\n            </Block>\r\n        </SafeAreaView>\r\n    </View>\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    safe: {\r\n        flex: 1,\r\n        backgroundColor: theme.colors.primary\r\n    },\r\n    request: {\r\n        padding: 20,\r\n        marginBottom: 15\r\n    },\r\n    requests: {\r\n        marginTop: -55,\r\n        paddingTop: 55 + 20,\r\n        paddingHorizontal: 15,\r\n        zIndex: -1\r\n    },\r\n    headerChart: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        zIndex: 1,\r\n    },\r\n    forCurrency: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        fontWeight: 'bold',\r\n        fontSize: 32\r\n    },\r\n    progress: {\r\n        alignItems: 'center',\r\n        width: 50,\r\n        justifyContent: 'center',\r\n    },\r\n    avatar: {\r\n        width: 25,\r\n        height: 25,\r\n        borderRadius: 25 / 2,\r\n        marginRight: 5\r\n    },\r\n})\r\n\r\nexport default CurrencyFormatting"]},"metadata":{},"sourceType":"module"}