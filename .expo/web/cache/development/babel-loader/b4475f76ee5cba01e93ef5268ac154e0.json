{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\test\\\\Desktop\\\\rlab1\\\\mobile_lab1\\\\pages\\\\SoilSense 3\\\\index.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from 'firebase';\nimport Button from '@material-ui/core/Button';\nimport 'firebase/firestore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { user } from \"../../components/mocks\";\nimport { Block, Text } from \"../../components\";\nimport * as theme from \"../../components/theme\";\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport YoutubeSearchedForIcon from '@material-ui/icons/YoutubeSearchedFor';\nimport { TextInput } from 'react-native-gesture-handler';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nvar SoilSenseT = function SoilSenseT(_ref) {\n  var navigation = _ref.navigation;\n  var config = {\n    apiKey: 'AIzaSyBmMQzZDPK8WoRFsXZwEikglgPh8fdbRfU',\n    authDomain: 'moonlit-premise-268014.firebaseapp.com',\n    databaseURL: 'https://project-483449585526.firebaseio.com',\n    projectId: 'moonlit-premise-268014'\n  };\n\n  if (!firebase.apps.length) {\n    var app = firebase.initializeApp(config);\n  }\n\n  var db = firebase.firestore(app);\n  var docRef = db.collection(\"soilSense\").doc(\"iAZwp2WZD51dWnkG45d5\");\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      temperatureLevel = _useState2[0],\n      setTemperatureLevel = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      waterPump = _useState4[0],\n      setWaterPump = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sensorLocation = _useState6[0],\n      setSensorLocation = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      maxWaterValue = _useState8[0],\n      setMaxWaterValue = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lightingLevel = _useState10[0],\n      setLightingLevel = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      humidityLevel = _useState12[0],\n      setHumidityLevel = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      update = _useState14[0],\n      setUpdate = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      value = _useState16[0],\n      setValue = _useState16[1];\n\n  var handleChange = function handleChange(event) {\n    setUpdate(event.target.value);\n\n    if (update === 'Max Water') {\n      getText();\n    }\n  };\n\n  var getTemperatureLevel = function getTemperatureLevel() {\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        setTemperatureLevel(doc.get('temperatureLevel'));\n        setWaterPump(doc.get('waterPump'));\n        setSensorLocation(doc.get('sensorLocation'));\n        setMaxWaterValue(doc.get('maxWaterValue'));\n        setLightingLevel(doc.get('lightingLevel'));\n        setHumidityLevel(doc.get('humidityLevel'));\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n\n  var getText = function getText(text) {\n    setValue(text);\n  };\n\n  var UpdateFunc = function UpdateFunc() {\n    if (update === 'Max Water') {\n      docRef.update({\n        maxWaterValue: value\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n      setMaxWaterValue(value);\n    } else if (update === 'Temperature') {\n      docRef.update({\n        temperatureLevel: value\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n      setTemperatureLevel(value);\n    } else if (update === 'Sensor Location') {\n      docRef.update({\n        sensorLocation: value\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n      setSensorLocation(value);\n    } else if (update === 'Lighting') {\n      docRef.update({\n        lightingLevel: value\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n      setLightingLevel(value);\n    } else if (update === 'Humidity') {\n      docRef.update({\n        humidityLevel: value\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n      setHumidityLevel(value);\n    } else if (update === 'Water Pump') {\n      docRef.update({\n        waterPump: value\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n      setWaterPump(value);\n    }\n  };\n\n  var renderRequests = function renderRequests() {\n    return React.createElement(Block, {\n      flex: 0.8,\n      column: true,\n      color: \"gray2\",\n      style: styles.requests,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, React.createElement(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, React.createElement(Block, {\n      card: true,\n      shadow: true,\n      color: \"white\",\n      style: styles.request,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, React.createElement(List, {\n      component: \"nav\",\n      \"aria-label\": \"main mailbox folders\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return navigation.navigate('Temperature');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, React.createElement(WhatshotIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    })), React.createElement(ListItemText, {\n      primary: \"Temperature level\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }), React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, React.createElement(ListItemText, {\n      primary: temperatureLevel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }))), React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }), React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return navigation.navigate('MaxWaterValue');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, React.createElement(OpacityIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    })), React.createElement(ListItemText, {\n      primary: \"Max water value\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }), React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, React.createElement(ListItemText, {\n      primary: maxWaterValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }))), React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }), React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return navigation.navigate('SensorLocation');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, React.createElement(LocationOnIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    })), React.createElement(ListItemText, {\n      primary: \"Sensor location\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }), React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, React.createElement(ListItemText, {\n      primary: sensorLocation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }))), React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return navigation.navigate('LightingLevel');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, React.createElement(WbIncandescentIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    })), React.createElement(ListItemText, {\n      primary: \"Lighting level\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }), React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, React.createElement(ListItemText, {\n      primary: lightingLevel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }))), React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }), React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return navigation.navigate('HumidityLevel');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, React.createElement(ColorizeIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    })), React.createElement(ListItemText, {\n      primary: \"Humidity level\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }), React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, React.createElement(ListItemText, {\n      primary: humidityLevel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }))), React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }), React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return navigation.navigate('WaterPump');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, React.createElement(YoutubeSearchedForIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    })), React.createElement(ListItemText, {\n      primary: \"Water pump\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    }), React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, React.createElement(ListItemText, {\n      primary: waterPump,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }))))), React.createElement(Block, {\n      card: true,\n      shadow: true,\n      color: \"white\",\n      style: styles.request,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, React.createElement(FormControl, {\n      style: {\n        marginBottom: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }, React.createElement(InputLabel, {\n      id: \"demo-simple-select-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }\n    }, \"Update\"), React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      value: update,\n      onChange: function onChange(event) {\n        return handleChange(event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, React.createElement(MenuItem, {\n      onClick: function onClick() {\n        return setUpdate('Temperature');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, \"Temperature\"), React.createElement(MenuItem, {\n      onClick: function onClick() {\n        return setUpdate('Max Water');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }, \"Max Water\"), React.createElement(MenuItem, {\n      onClick: function onClick() {\n        return setUpdate('Sensor Location');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    }, \"Sensor Location\"), React.createElement(MenuItem, {\n      onClick: function onClick() {\n        return setUpdate('Lighting');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, \"Lighting\"), React.createElement(MenuItem, {\n      onClick: function onClick() {\n        return setUpdate('Humidity');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }, \"Humidity\"), React.createElement(MenuItem, {\n      onClick: function onClick() {\n        return setUpdate('Water Pump');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }, \"Water Pump\"))), React.createElement(View, {\n      style: {\n        marginBottom: 16,\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        getText(text);\n      },\n      style: {\n        width: 200,\n        padding: 5,\n        height: 32,\n        borderColor: 'black',\n        borderStyle: 'solid',\n        borderWidth: 3\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    })), React.createElement(View, {\n      style: styles.buttonWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }, React.createElement(Button, {\n      onClick: UpdateFunc,\n      color: \"#1A1E3D\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 64\n      }\n    }, \"update\")))), React.createElement(Block, {\n      card: true,\n      shadow: true,\n      color: \"white\",\n      style: styles.request,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: styles.buttonWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, React.createElement(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    }, \"+\")))));\n  };\n\n  return React.createElement(React.Fragment, null, getTemperatureLevel(), waterPump === '' ? React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }) : React.createElement(SafeAreaView, {\n    style: styles.safe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 51\n    }\n  }, React.createElement(Block, {\n    flex: 0.42,\n    column: true,\n    style: {\n      paddingHorizontal: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, React.createElement(Block, {\n    flex: false,\n    row: true,\n    style: {\n      paddingVertical: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, React.createElement(Block, {\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    h3: true,\n    white: true,\n    style: {\n      marginRight: -(25 + 5)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, \"Data from my sensors\")), React.createElement(Image, {\n    style: styles.avatar,\n    source: user.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  })), React.createElement(Block, {\n    card: true,\n    shadow: true,\n    color: \"white\",\n    style: styles.headerChart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, React.createElement(Block, {\n    row: true,\n    style: {\n      paddingHorizontal: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, React.createElement(Block, {\n    flex: false,\n    row: true,\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    h2: true,\n    row: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, \"Data\")), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return navigation.navigate('Sensors');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, \"Go to main page\")))), renderRequests()));\n};\n\nvar styles = StyleSheet.create({\n  safe: {\n    flex: 1,\n    backgroundColor: theme.colors.primary\n  },\n  request: {\n    padding: 20,\n    marginBottom: 15\n  },\n  formControl: {\n    minWidth: 120\n  },\n  buttonWrapper: {\n    display: 'flex',\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: '#1A1E3D'\n  },\n  headerChart: {\n    paddingTop: 30,\n    paddingBottom: 30,\n    zIndex: 1\n  },\n  requests: {\n    marginTop: -55,\n    paddingTop: 55 + 20,\n    paddingHorizontal: 15,\n    zIndex: -1\n  },\n  avatar: {\n    width: 25,\n    height: 25,\n    borderRadius: 25 / 2,\n    marginRight: 5\n  }\n});\nexport default SoilSenseT;","map":{"version":3,"sources":["C:/Users/test/Desktop/rlab1/mobile_lab1/pages/SoilSense 3/index.js"],"names":["React","useState","firebase","Button","List","ListItem","ListItemIcon","ListItemText","Divider","user","Block","Text","theme","WbIncandescentIcon","OpacityIcon","LocationOnIcon","ColorizeIcon","WhatshotIcon","LinearProgress","YoutubeSearchedForIcon","TextInput","InputLabel","MenuItem","FormControl","Select","ListItemSecondaryAction","SoilSenseT","navigation","config","apiKey","authDomain","databaseURL","projectId","apps","length","app","initializeApp","db","firestore","docRef","collection","doc","temperatureLevel","setTemperatureLevel","waterPump","setWaterPump","sensorLocation","setSensorLocation","maxWaterValue","setMaxWaterValue","lightingLevel","setLightingLevel","humidityLevel","setHumidityLevel","update","setUpdate","value","setValue","handleChange","event","target","getText","getTemperatureLevel","get","then","exists","console","log","catch","error","text","UpdateFunc","renderRequests","styles","requests","request","navigate","marginBottom","alignItems","width","padding","height","borderColor","borderStyle","borderWidth","buttonWrapper","safe","paddingHorizontal","paddingVertical","marginRight","avatar","headerChart","StyleSheet","create","flex","backgroundColor","colors","primary","formControl","minWidth","display","paddingTop","paddingBottom","zIndex","marginTop","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, StyleSheet, Image, SafeAreaView, ScrollView } from 'react-native'\r\nimport firebase from 'firebase'\r\nimport Button from '@material-ui/core/Button';\r\nimport 'firebase/firestore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { user } from '../../components/mocks';\r\nimport { Block, Text } from \"../../components\";\r\nimport * as theme from \"../../components/theme\";\r\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\r\nimport OpacityIcon from '@material-ui/icons/Opacity';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport ColorizeIcon from '@material-ui/icons/Colorize';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport YoutubeSearchedForIcon from '@material-ui/icons/YoutubeSearchedFor';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst SoilSenseT = ({ navigation }) => {\r\n\r\n    var config = {\r\n        apiKey: 'AIzaSyBmMQzZDPK8WoRFsXZwEikglgPh8fdbRfU',\r\n        authDomain: 'moonlit-premise-268014.firebaseapp.com',\r\n        databaseURL: 'https://project-483449585526.firebaseio.com',\r\n        projectId: 'moonlit-premise-268014',\r\n    }\r\n\r\n    if (!firebase.apps.length) {\r\n        var app = firebase.initializeApp(config)\r\n    }\r\n\r\n    var db = firebase.firestore(app);\r\n\r\n    var docRef = db.collection(\"soilSense\").doc(\"iAZwp2WZD51dWnkG45d5\");\r\n\r\n    const [temperatureLevel, setTemperatureLevel] = useState(0);\r\n    const [waterPump, setWaterPump] = useState('');\r\n    const [sensorLocation, setSensorLocation] = useState('');\r\n    const [maxWaterValue, setMaxWaterValue] = useState(0);\r\n    const [lightingLevel, setLightingLevel] = useState('');\r\n    const [humidityLevel, setHumidityLevel] = useState(0);\r\n    const [update, setUpdate] = useState('');\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setUpdate(event.target.value);\r\n        if (update === 'Max Water') {\r\n            getText()\r\n        }\r\n    };\r\n\r\n    const getTemperatureLevel = () => {\r\n        docRef.get().then(function (doc) {\r\n            if (doc.exists) {\r\n                // console.log(\"Document data:\", doc.data());\r\n                setTemperatureLevel(doc.get('temperatureLevel'));\r\n                setWaterPump(doc.get('waterPump'));\r\n                setSensorLocation(doc.get('sensorLocation'));\r\n                setMaxWaterValue(doc.get('maxWaterValue'));\r\n                setLightingLevel(doc.get('lightingLevel'));\r\n                setHumidityLevel(doc.get('humidityLevel'));\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    const getText = (text) => {\r\n        setValue(text);\r\n    }\r\n\r\n    // const j = () => {\r\n    //   console.log(update)\r\n    // }\r\n    const UpdateFunc = () => {\r\n        if (update === 'Max Water') {\r\n            docRef.update({\r\n                maxWaterValue: value\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                });\r\n\r\n            setMaxWaterValue(value)\r\n        } else if (update === 'Temperature') {\r\n            docRef.update({\r\n                temperatureLevel: value\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                });\r\n\r\n            setTemperatureLevel(value)\r\n        } else if (update === 'Sensor Location') {\r\n            docRef.update({\r\n                sensorLocation: value\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                });\r\n\r\n            setSensorLocation(value)\r\n        } else if (update === 'Lighting') {\r\n            docRef.update({\r\n                lightingLevel: value\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                });\r\n\r\n            setLightingLevel(value)\r\n        } else if (update === 'Humidity') {\r\n            docRef.update({\r\n                humidityLevel: value\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                });\r\n\r\n            setHumidityLevel(value)\r\n        } else if (update === 'Water Pump') {\r\n            docRef.update({\r\n                waterPump: value\r\n            })\r\n                .catch(function (error) {\r\n                    console.log(\"Error getting document:\", error);\r\n                });\r\n\r\n            setWaterPump(value)\r\n        }\r\n    }\r\n    const renderRequests = () => {\r\n        return (\r\n            <Block flex={0.8} column color=\"gray2\" style={styles.requests}>\r\n                <ScrollView showsVerticalScrollIndicator={false}>\r\n                    <Block card shadow color=\"white\" style={styles.request}>\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            <ListItem button onClick={() => navigation.navigate('Temperature')}>\r\n                                <ListItemIcon>\r\n                                    <WhatshotIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Temperature level\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <ListItemText primary={temperatureLevel} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => navigation.navigate('MaxWaterValue')}>\r\n                                <ListItemIcon>\r\n                                    <OpacityIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Max water value\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <ListItemText primary={maxWaterValue} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => navigation.navigate('SensorLocation')}>\r\n                                <ListItemIcon>\r\n                                    <LocationOnIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Sensor location\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <ListItemText primary={sensorLocation} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => navigation.navigate('LightingLevel')}>\r\n                                <ListItemIcon>\r\n                                    <WbIncandescentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Lighting level' />\r\n                                <ListItemSecondaryAction>\r\n                                    <ListItemText primary={lightingLevel} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => navigation.navigate('HumidityLevel')}>\r\n                                <ListItemIcon>\r\n                                    <ColorizeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Humidity level\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <ListItemText primary={humidityLevel} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => navigation.navigate('WaterPump')}>\r\n                                <ListItemIcon>\r\n                                    <YoutubeSearchedForIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Water pump\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <ListItemText primary={waterPump} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Block>\r\n                    <Block card shadow color=\"white\" style={styles.request}>\r\n                        <View >\r\n                            <FormControl style={{ marginBottom: 16 }}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Update</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={update}\r\n                                    onChange={(event) => handleChange(event)}\r\n                                >\r\n                                    <MenuItem onClick={() => setUpdate('Temperature')}>Temperature</MenuItem>\r\n                                    <MenuItem onClick={() => setUpdate('Max Water')}>Max Water</MenuItem>\r\n                                    <MenuItem onClick={() => setUpdate('Sensor Location')}>Sensor Location</MenuItem>\r\n                                    <MenuItem onClick={() => setUpdate('Lighting')}>Lighting</MenuItem>\r\n                                    <MenuItem onClick={() => setUpdate('Humidity')}>Humidity</MenuItem>\r\n                                    <MenuItem onClick={() => setUpdate('Water Pump')}>Water Pump</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <View style={{ marginBottom: 16, alignItems: 'center' }}>\r\n                                <TextInput onChangeText={(text) => { getText(text) }} style={{ width: 200, padding: 5, height: 32, borderColor: 'black', borderStyle: 'solid', borderWidth: 3 }} />\r\n                            </View>\r\n                            <View style={styles.buttonWrapper}><Button onClick={UpdateFunc} color='#1A1E3D'>update</Button></View>\r\n                        </View>\r\n                    </Block>\r\n                    <Block card shadow color=\"white\" style={styles.request}>\r\n                        <View style={styles.buttonWrapper}>\r\n                            <Button>+</Button>\r\n                        </View>\r\n                    </Block>\r\n                </ScrollView>\r\n            </Block>\r\n        );\r\n    }\r\n\r\n    return (<>{getTemperatureLevel()}\r\n        {waterPump === '' ? <LinearProgress /> : (<SafeAreaView style={styles.safe}>\r\n            <Block flex={0.42} column style={{ paddingHorizontal: 15 }}>\r\n                <Block flex={false} row style={{ paddingVertical: 15 }}>\r\n                    <Block center>\r\n                        <Text h3 white style={{ marginRight: -(25 + 5) }}>Data from my sensors</Text>\r\n                    </Block>\r\n                    <Image style={styles.avatar} source={user.avatar} />\r\n                </Block>\r\n                <Block card shadow color=\"white\" style={styles.headerChart}>\r\n                    <Block row style={{ paddingHorizontal: 30 }}>\r\n                        <Block flex={false} row center>\r\n                            <Text h2 row>Data</Text>\r\n                        </Block>\r\n                        <Button size=\"small\" color=\"primary\" onClick={() => navigation.navigate('Sensors')}>\r\n                            Go to main page\r\n            </Button>\r\n                    </Block>\r\n                </Block>\r\n            </Block>\r\n            {renderRequests()}\r\n        </SafeAreaView>)}</>)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    safe: {\r\n        flex: 1,\r\n        backgroundColor: theme.colors.primary\r\n    },\r\n    request: {\r\n        padding: 20,\r\n        marginBottom: 15\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: '#1A1E3D',\r\n    },\r\n    headerChart: {\r\n        paddingTop: 30,\r\n        paddingBottom: 30,\r\n        zIndex: 1\r\n    },\r\n    requests: {\r\n        marginTop: -55,\r\n        paddingTop: 55 + 20,\r\n        paddingHorizontal: 15,\r\n        zIndex: -1\r\n    },\r\n    avatar: {\r\n        width: 25,\r\n        height: 25,\r\n        borderRadius: 25 / 2,\r\n        marginRight: 5\r\n    },\r\n})\r\n\r\nexport default SoilSenseT\r\n"]},"metadata":{},"sourceType":"module"}