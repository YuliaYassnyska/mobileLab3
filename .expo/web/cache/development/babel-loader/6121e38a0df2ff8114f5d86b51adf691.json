{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\test\\\\Desktop\\\\rlab1\\\\mobile_lab1\\\\App.js\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SignIn from \"./pages/SignIn\";\nimport SoilSense from \"./pages/SoilSense\";\nimport SignUp from \"./pages/SignUp\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport firebase from 'firebase/app';\nimport TemperatureLevel from \"./pages/Temperature\";\nimport HumidityLevel from \"./pages/Humidity\";\nimport LightingLevel from \"./pages/Lighting\";\nimport SensorLocation from \"./pages/SensorLocation\";\nimport MaxWaterLevel from \"./pages/MaxWater\";\nimport WaterPump from \"./pages/WaterPump\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport NetInfo from \"@react-native-community/netinfo\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nvar App = function App() {\n  var _useState = useState({\n    email: '',\n    password: '',\n    isValidEmail: true,\n    isValidPassword: true,\n    error: '',\n    snackbar: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var firebaseConfig = {\n    apiKey: 'AIzaSyBmMQzZDPK8WoRFsXZwEikglgPh8fdbRfU',\n    authDomain: 'moonlit-premise-268014.firebaseapp.com',\n    databaseURL: 'https://project-483449585526.firebaseio.com',\n    projectId: 'moonlit-premise-268014'\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  var Stack = createStackNavigator();\n  return React.createElement(React.Fragment, null, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"SignIn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SoilSense\",\n    component: SoilSense,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Temperature\",\n    component: TemperatureLevel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"HumidityLevel\",\n    component: HumidityLevel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LightingLevel\",\n    component: LightingLevel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MaxWaterValue\",\n    component: MaxWaterLevel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SensorLocation\",\n    component: SensorLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"WaterPump\",\n    component: WaterPump,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }))), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: data.snackbar,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    message: \"Note archived\",\n    action: React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Internet error\"), React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, React.createElement(CloseIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/test/Desktop/rlab1/mobile_lab1/App.js"],"names":["React","useState","SignIn","SoilSense","SignUp","NavigationContainer","createStackNavigator","firebase","TemperatureLevel","HumidityLevel","LightingLevel","SensorLocation","MaxWaterLevel","WaterPump","Snackbar","NetInfo","IconButton","CloseIcon","App","email","password","isValidEmail","isValidPassword","error","snackbar","data","setData","firebaseConfig","apiKey","authDomain","databaseURL","projectId","apps","length","initializeApp","Stack","vertical","horizontal","handleClose","styles","StyleSheet","create","container","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { StyleSheet } from 'react-native'\r\nimport SignIn from './pages/SignIn'\r\nimport SoilSense from './pages/SoilSense'\r\nimport SignUp from './pages/SignUp'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport firebase from 'firebase/app';\r\nimport TemperatureLevel from './pages/Temperature'\r\nimport HumidityLevel from './pages/Humidity'\r\nimport LightingLevel from './pages/Lighting'\r\nimport SensorLocation from './pages/SensorLocation'\r\nimport MaxWaterLevel from './pages/MaxWater'\r\nimport WaterPump from './pages/WaterPump'\r\n// import CurrencyFormatting from './pages/CurrencyFormatting'\r\n// import Auth from './pages/Auth'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst App = () => {\r\n\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    isValidEmail: true,\r\n    isValidPassword: true,\r\n    error: '',\r\n    snackbar: false,\r\n    // password_confirmation: '',\r\n    // loading: false\r\n  })\r\n\r\n  // const [jwt, setJwt] = useState({\r\n  //   jwt: '',\r\n  //   loading: true\r\n  // })\r\n\r\n  // const newJWT = (jwt) => {\r\n  //   setJwt({\r\n  //     jwt: jwt\r\n  //   });\r\n  // }  \r\n\r\n  //   if (!jwt.jwt) {\r\n  //     return <Auth newJWT={newJWT}/>\r\n  //   }\r\n  var firebaseConfig = {\r\n    apiKey: 'AIzaSyBmMQzZDPK8WoRFsXZwEikglgPh8fdbRfU',\r\n    authDomain: 'moonlit-premise-268014.firebaseapp.com',\r\n    databaseURL: 'https://project-483449585526.firebaseio.com',\r\n    projectId: 'moonlit-premise-268014'\r\n  }\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig)\r\n  }\r\n\r\n\r\n  const Stack = createStackNavigator();\r\n\r\n  return (\r\n    <><NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"SignIn\">\r\n        <Stack.Screen name=\"SoilSense\" component={SoilSense} />\r\n        <Stack.Screen name=\"SignIn\" component={SignIn} />\r\n        <Stack.Screen name=\"SignUp\" component={SignUp} />\r\n        <Stack.Screen name=\"Temperature\" component={TemperatureLevel} />\r\n        <Stack.Screen name=\"HumidityLevel\" component={HumidityLevel} />\r\n        <Stack.Screen name=\"LightingLevel\" component={LightingLevel} />\r\n        <Stack.Screen name=\"MaxWaterValue\" component={MaxWaterLevel} />\r\n        <Stack.Screen name=\"SensorLocation\" component={SensorLocation} />\r\n        <Stack.Screen name=\"WaterPump\" component={WaterPump} />\r\n        {/* <Stack.Screen name=\"CurrencyFormatting\" component={CurrencyFormatting} /> */}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={data.snackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              Internet error\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      /></>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n})\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}