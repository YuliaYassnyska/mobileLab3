{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, { useState } from 'react';\r\n// import { View, StyleSheet, Image, SafeAreaView, TouchableOpacity, ScrollView } from 'react-native';\r\n// import firebase from 'firebase'\r\n// import 'firebase/firestore';\r\n// import LinearProgress from '@material-ui/core/LinearProgress';\r\n// import * as theme from \"../../components/theme\";\r\n// import { Block, Text } from \"../../components\";\r\n// import Button from '@material-ui/core/Button';\r\n// import { user } from '../../components/mocks';\r\n\r\n// const MaxWaterLevel = ({ navigation }) => {\r\n//   var config = {\r\n//     apiKey: 'AIzaSyBmMQzZDPK8WoRFsXZwEikglgPh8fdbRfU',\r\n//     authDomain: 'moonlit-premise-268014.firebaseapp.com',\r\n//     databaseURL: 'https://project-483449585526.firebaseio.com',\r\n//     projectId: 'moonlit-premise-268014',\r\n//   }\r\n\r\n//   if (!firebase.apps.length) {\r\n//     var app = firebase.initializeApp(config)\r\n//   }\r\n\r\n//   var db = firebase.firestore(app);\r\n\r\n//   var docRef = db.collection(\"soilSense\").doc(\"ELerybp3IBsyEfloN4vF\");\r\n//   const [maxWaterValue, setMaxWaterValue] = useState(0);\r\n\r\n//   const getMaxWaterValue = () => {\r\n//     docRef.get().then(function (doc) {\r\n//       if (doc.exists) {\r\n//         console.log(\"Document data:\", doc.data());\r\n//         setMaxWaterValue(doc.get('maxWaterValue'));\r\n//       } else {\r\n//         console.log(\"No such document!\");\r\n//       }\r\n//     }).catch(function (error) {\r\n//       console.log(\"Error getting document:\", error);\r\n//     });\r\n//   }\r\n//   return <View>\r\n//     {getMaxWaterValue()}\r\n//     {maxWaterValue === 0 ? <LinearProgress /> : (\r\n//       <SafeAreaView style={styles.safe}>\r\n//         <Block flex={0.42} column style={{ paddingHorizontal: 15 }}>\r\n//           <Block flex={false} row style={{ paddingVertical: 15 }}>\r\n//             <Block center>\r\n//               <Text h3 white style={{ marginRight: -(25 + 5) }}>Max Water Valuel</Text>\r\n//             </Block>\r\n//             <Image style={styles.avatar} source={user.avatar} />\r\n//           </Block>\r\n//           <Block row card shadow color=\"white\" style={styles.headerChart}>\r\n//             <Block style={{ paddingHorizontal: 30 }}>\r\n//               <Block flex={false} row center>\r\n//                 <Text h2>{maxWaterValue} l</Text>\r\n//               </Block>\r\n//             </Block>\r\n//             <Button size=\"small\" color=\"primary\" onClick={() => navigation.navigate('SoilSenseF')}>\r\n//               Go to main page\r\n//         </Button>\r\n//             <Button size=\"small\" color=\"primary\" onClick={() => navigation.navigate('SensorLocation')}>\r\n//               Next\r\n//         </Button>\r\n//           </Block>\r\n//         </Block>\r\n//         <Block flex={0.8} column color=\"gray2\" style={styles.requests} />\r\n//       </SafeAreaView>)}\r\n//   </View>\r\n// }\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n//   safe: {\r\n//     flex: 1,\r\n//     backgroundColor: theme.colors.primary\r\n//   },\r\n//   avatar: {\r\n//     width: 25,\r\n//     height: 25,\r\n//     borderRadius: 25 / 2,\r\n//     marginRight: 5\r\n//   },\r\n//   requests: {\r\n//     marginTop: -55,\r\n//     paddingTop: 55 + 20,\r\n//     paddingHorizontal: 15,\r\n//     zIndex: -1\r\n//   },\r\n//   headerChart: {\r\n//     paddingTop: 30,\r\n//     paddingBottom: 30,\r\n//     zIndex: 1,\r\n//   },\r\n//   progress: {\r\n//     alignItems: 'center',\r\n//     width: 50,\r\n//     justifyContent: 'center',\r\n//   }\r\n// })\r\n\r\n// export default MaxWaterLevel"]},"metadata":{},"sourceType":"script"}